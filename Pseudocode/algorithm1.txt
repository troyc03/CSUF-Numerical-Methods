Function NewtonInterpolation(x_values, y_values):
    n = length of x_values
    divided_diff = 2D array of size n x n
    divided_diff[:, 0] = y_values  # First column is the y-values

    // Calculate divided differences
    For j = 1 to n-1:
        For i = 0 to n-j-1:
            divided_diff[i][j] = (divided_diff[i+1][j-1] - divided_diff[i][j-1]) / (x_values[i+j] - x_values[i])

    // Build the Newton polynomial
    Polynomial = 0
    For i = 0 to n-1:
        Term = divided_diff[0][i]
        For j = 0 to i-1:
            Term = Term * (x - x_values[j])  // Multiply by (x - x_j) terms
        Polynomial += Term

    Return Polynomial
