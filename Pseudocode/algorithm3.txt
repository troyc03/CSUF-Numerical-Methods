Function CubicSplineInterpolation(x_values, y_values):
    n = length of x_values
    h = array of size n-1
    alpha = array of size n-1
    l = array of size n
    mu = array of size n-1
    z = array of size n

    // Step 1: Compute h and alpha
    For i = 0 to n-2:
        h[i] = x_values[i+1] - x_values[i]
        alpha[i] = (3 / h[i]) * (y_values[i+1] - y_values[i]) - (3 / h[i-1]) * (y_values[i] - y_values[i-1])

    // Step 2: Solve the tridiagonal system for l, mu, z
    l[0] = 1
    mu[0] = 0
    z[0] = 0
    For i = 1 to n-2:
        l[i] = 2 * (x_values[i+1] - x_values[i-1]) - h[i-1] * mu[i-1]
        mu[i] = h[i] / l[i]
        z[i] = (alpha[i] - h[i-1] * z[i-1]) / l[i]

    l[n-1] = 1
    z[n-1] = 0
    For i = n-2 down to 0:
        y_values[i] = z[i] - mu[i] * y_values[i+1]
    
    Return y_values  // The coefficients for the cubic spline polynomials
